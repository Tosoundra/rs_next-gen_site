.header {
  --padding-vertical: 75px;
  --scroll-y: 0;
  --scroll-direction: down;
  position: fixed;
  z-index: 9999;
  padding-top: var(--padding-vertical);
  width: 100%;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  mix-blend-mode: difference;
  margin-top: 20px;
  will-change: transform;
  /* Используем CSS переменные для анимации */
  transform: translateY(calc(var(--scroll-y) * 0.1px));

  @media (max-width: 1919px) {
    --padding-vertical: 44px;
  }

  @media (max-width: 1279px) {
    --padding-vertical: var(--wrapper-horizontal-padding);
  }

  @media (max-width: 767px) {
    --padding-vertical: calc(var(--wrapper-horizontal-padding) * 2);
  }

  .burger {
    position: relative;
    display: flex;
    flex-direction: column;
    cursor: pointer;
    width: 30px;
    height: 30px;
    justify-content: center;
    align-items: center;

    &::before,
    &::after {
      display: block;
      content: '';
      width: 30px;
      height: 2px;
      background-color: rgb(255, 255, 255);
      position: absolute;
      transition: transform 0.3s;
    }

    &::after {
      transform: translateY(5px);
    }

    &::before {
      transform: translateY(-5px);
    }
  }

  .burgerActive {
    &::after {
      transform: translateY(0) rotate(45deg);
    }

    &::before {
      transform: translateY(0) rotate(-45deg);
    }
  }
}

.header.hidden {
  transform: translateY(-150%);
}

/* Альтернативный способ с CSS переменными */
.header[data-scroll-direction="up"] {
  transform: translateY(-150%);
}

.header[data-scroll-direction="down"] {
  transform: translateY(0);
}

.wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;

  @media (max-width: 767px) {
    gap: 8px;
  }

  .side {
    flex: 1;

    &:first-child {
      justify-content: flex-start;
    }

    &:last-child {
      justify-content: flex-end;
    }

    @media (max-width: 479px) {
      flex: none;
    }
  }
}
